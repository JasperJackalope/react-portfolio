{"ast":null,"code":"var _jsxFileName = \"/Users/danielboddicker/bootcamp/homework/20-react-portfolio/react-portfolio/src/components/Contact/Contact.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import './Contact.css';\n\n// const Contact = () => {\n//   return (\n//     <section className=\"contact\">\n//       <div className=\"contact-container\">\n//         <h2>Contact</h2>\n//         <p>I look forward to hearing from you!</p>\n//         <form>\n//           <label htmlFor=\"name\">Name</label>\n//           <input type=\"text\" id=\"name\" required />\n\n//           <label htmlFor=\"email\">Email</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n//             required\n//           />\n\n//           <label htmlFor=\"message\">Message</label>\n//           <textarea id=\"message\" required></textarea>\n\n//           <button type=\"submit\">Submit</button>\n//         </form>\n//       </div>\n//     </section>\n//   );\n// };\n\n// export default Contact;\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const [status, setStatus] = useState(\"Submit\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setStatus(\"Sending...\");\n    const {\n      name,\n      email,\n      message\n    } = e.target.elements;\n    let details = {\n      name: name.value,\n      email: email.value,\n      message: message.value\n    };\n    let response = await fetch(\"http://localhost:5001/contact\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      },\n      body: JSON.stringify(details)\n    });\n    setStatus(\"Submit\");\n    let result = await response.json();\n    alert(result.status);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"message\",\n        children: \"Message:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"message\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Contact, \"qESKK7LDpFTuMSR0UrKu+hcLdmU=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Contact","_s","status","setStatus","handleSubmit","e","preventDefault","name","email","message","target","elements","details","value","response","fetch","method","headers","body","JSON","stringify","result","json","alert","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","required","_c","$RefreshReg$"],"sources":["/Users/danielboddicker/bootcamp/homework/20-react-portfolio/react-portfolio/src/components/Contact/Contact.js"],"sourcesContent":["// import React from 'react';\n// import './Contact.css';\n\n// const Contact = () => {\n//   return (\n//     <section className=\"contact\">\n//       <div className=\"contact-container\">\n//         <h2>Contact</h2>\n//         <p>I look forward to hearing from you!</p>\n//         <form>\n//           <label htmlFor=\"name\">Name</label>\n//           <input type=\"text\" id=\"name\" required />\n\n//           <label htmlFor=\"email\">Email</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n//             required\n//           />\n\n//           <label htmlFor=\"message\">Message</label>\n//           <textarea id=\"message\" required></textarea>\n\n//           <button type=\"submit\">Submit</button>\n//         </form>\n//       </div>\n//     </section>\n//   );\n// };\n\n// export default Contact;\n\nimport React, { useState } from \"react\";\n\nconst Contact = () => {\n  const [status, setStatus] = useState(\"Submit\");\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setStatus(\"Sending...\");\n    const { name, email, message } = e.target.elements;\n    let details = {\n      name: name.value,\n      email: email.value,\n      message: message.value,\n    };\n    let response = await fetch(\"http://localhost:5001/contact\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(details),\n    });\n    setStatus(\"Submit\");\n    let result = await response.json();\n    alert(result.status);\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"name\">Name:</label>\n        <input type=\"text\" id=\"name\" required />\n      </div>\n      <div>\n        <label htmlFor=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" required />\n      </div>\n      <div>\n        <label htmlFor=\"message\">Message:</label>\n        <textarea id=\"message\" required />\n      </div>\n      <button type=\"submit\">{status}</button>\n    </form>\n  );\n};\n\nexport default Contact;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}